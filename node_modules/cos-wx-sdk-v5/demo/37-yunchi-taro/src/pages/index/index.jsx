import Taro, { Component } from '@tarojs/taro'
import { View, Button, Text, Image, Swiper, SwiperItem, AtSearchBar } from '@tarojs/components'
import { connect } from '@tarojs/redux'
import './index.scss'
import { updateUserInfo } from '../../actions/userInfo'
const shopInfo_delete = 'https://lqh-wechat.oss-cn-hangzhou.aliyuncs.com/e-commerce/miniapp/delete-banner.png'
import { generateNumber } from '../../utils/common'
import add_img from '../../assets/arrondi/add.png'

 
const number = generateNumber()
var COS = require('cos-wx-sdk-v5');
var cos = new COS({
  SecretId: 'AKIDFH4aolRqzrSmpb9RTEhurYy824pPikV0',
  SecretKey: 'FEwNYSO8ewzpOhjUzECtKUO1NSHp66pJ',
  SimpleUploadMethod: 'putObject', // 强烈建议，高级上传、批量上传内部对小文件做简单上传时使用putObject,sdk版本至少需要v1.3.0
});
var uploadFiles = function (file) {
  console.log('file', file);
  cos.sliceUploadFile({
    Bucket: 'zc-wechat-1300923022', /* 必须 */
    Region: 'ap-shanghai',     /* 存储桶所在地域，必须字段 */
    // Key: file.name,              /* 必须 */
    // FilePath: file.path,                /* 必须 */
    // FileSize: file.size,                 /* v1.4.3之前的版本必须，v1.4.3及以后的版本非必须 */
    Key: number,
    FilePath: file.tempFilePath,
    FileSize: file.size,
    // SliceSize: 1024 * 1024 * 5,     /* 触发分块上传的阈值，超过5MB使用分块上传，非必须，按需调整，最小支持1MB */
    onTaskReady: function (taskId) {                   /* 非必须 */
      console.log('onTaskReady--->', taskId);
    },
    onProgress: function (progressData) {           /* 非必须 */
      console.log('onProgress--->', JSON.stringify(progressData));
    },
    onFileFinish: function (err, data, options) {   /* 非必须 */
      console.log('onFileFinish---->', options.Key + '上传' + (err ? '失败' : '完成'));
    },
  }, function (err, data) {
    console.log('err--err-->', err);
    console.log('err--data-->', data);
  });
}

@connect(({ userInfo, coordinate, }) => ({
  userInfo, coordinate,
}), (dispatch) => ({
  updateUserInfo(action) {
    dispatch(updateUserInfo(action))
  }
}))
class Index extends Component {

  config = {
    navigationBarTitleText: '首页',
    components: {

    }
  }
  state = {
    coverList: [],
    videoList: [],
    videoPathList: [],
    workDetail: '',
    orderDetail: '',
    orderId: 0,
    orderStatus: 0,
    audioList: [],
    remark: '',

    progress: 0,
    uploadedSize: 0,
    averageSpeed: 0,
    timeRemaining: Number.POSITIVE_INFINITY,
    testChunks: false
  }

  componentWillMount() {
  }


  chooseVideo1() {
    wx.chooseMedia({
      count: 1,
      mediaType: ['video'],
      sourceType: ['album', 'camera'],
      maxDuration: 30,
      camera: 'back',
      sizeType: ['original'],
      success: function (res) {
        console.log('chooseMedia--res--->', res);
        uploadFiles(res.tempFiles[0]);
      }
    });
  }


  render() {
    const { coverList, videoList, workDetail, orderStatus, remark, testChunks, progress, uploadedSize, averageSpeed, timeRemaining } = this.state
    return (
      <View className='container'>

        <View className='content'>
          <View className='content_bg'>
            <View className='content_top'>
              <View className='content_title'>上传视频</View>
              <View className='content_tip'>(视频比例3:4)</View>
            </View>
            <View className='content_foot'>
              <ScrollView className='addImage-content' scrollX='true'>
                <View className='content'>
                  <View className='item'>
                    {videoList.length < 4 &&
                      <View className='item-box1' onClick={this.chooseVideo1.bind(this)}>
                        <Image className='add_img' src={add_img}></Image>
                      </View>
                    }
                    {videoList.map((vd, indx) =>
                      <View className='item-box2' key={vd}>
                        <Video className='box-image' controls src={vd}></Video>
                        <Image className='box-sign2' onClick={this.deteleVideo.bind(this, indx)} src={shopInfo_delete}></Image>
                      </View>
                    )}
                  </View>
                </View>
              </ScrollView>
            </View>
          </View>
        </View>
      </View>
    )
  }
}


export default Index
