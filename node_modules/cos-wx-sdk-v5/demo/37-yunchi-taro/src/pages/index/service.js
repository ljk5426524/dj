import Taro from '@tarojs/taro'
import { get as getGlobalData, set as setGlobalData } from '../../app.global'


var service = {
    findOrder: (params) => new Promise((resolve, reject) => {
        Taro.request({
            url: getGlobalData('httpUrl') + 'order/findAll',
            method: 'POST',
            data: {
                ...params,
                openid: getGlobalData('openid'),
                session_key: getGlobalData('session_key'),
            },
            header: {
                'Authorization': getGlobalData('token')
            },
            success: (res) => resolve(res),
            fail: (res) => reject(res)
        })
    }),
    findBanner: (params) => new Promise((resolve, reject) => {
        Taro.request({
            url: getGlobalData('httpUrl') + 'banner/findAll',
            method: 'POST',
            data: {
                ...params,
                openid: getGlobalData('openid'),
                session_key: getGlobalData('session_key'),
            },
            header: {
                'Authorization': getGlobalData('token')
            },
            success: (res) => resolve(res),
            fail: (res) => reject(res)
        })
    }),
    findAdBanner: (params) => new Promise((resolve, reject) => {
        Taro.request({
            url: getGlobalData('httpUrl') + 'banner/findAdBanner',
            method: 'POST',
            data: {
                ...params,
                openid: getGlobalData('openid'),
                session_key: getGlobalData('session_key'),
            },
            header: {
                'Authorization': getGlobalData('token')
            },
            success: (res) => resolve(res),
            fail: (res) => reject(res)
        })
    }),

    findMenus: (params) => new Promise((resolve, reject) => {
        Taro.request({
            url: getGlobalData('httpUrl') + 'menu/findAll',
            method: 'POST',
            data: {
                ...params,
                openid: getGlobalData('openid'),
                session_key: getGlobalData('session_key'),
            },
            header: {
                'Authorization': getGlobalData('token')
            },
            success: (res) => resolve(res),
            fail: (res) => reject(res)
        })
    }),

}

module.exports = service;